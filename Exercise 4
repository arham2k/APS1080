{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
       
      ],
      "metadata": {
        "id": "h3KA5zu42pOK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "import gym\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "env = gym.make('CartPole-v1')\n",
        "\n",
        "p_inputSpace = 4\n",
        "p_outputSpace = 2\n",
        "\n",
        "#Construct a neural network with several layers\n",
        "inputs = keras.Input(shape=(p_inputSpace,), name=\"states\")\n",
        "x1 = keras.layers.Dense(128, activation=\"relu\")(inputs)\n",
        "x2 = keras.layers.Dense(128, activation=\"relu\")(x1)\n",
        "outputs = keras.layers.Dense(p_outputSpace, activation=\"linear\")(x2)\n",
        "model = keras.Model(inputs=inputs, outputs=outputs) # Obtain the gradient of the neural network with respect to its parameters\n",
        "\n",
        "alpha = 0.0005\n",
        "optimizer = keras.optimizers.SGD(learning_rate=alpha)\n",
        "loss_function = keras.losses.MeanSquaredError()\n",
        "\n",
        "episodes = 500\n",
        "gamma = 0.99\n",
        "epsilon = 1.0\n",
        "epsilon_min = 0.01\n",
        "epsilon_decay = 0.995\n",
        "\n",
        "episode_rewards = []\n",
        "\n",
        "# Train the neural network by stochastic gradient descent\n",
        "\n",
        "for episode in range(episodes):\n",
        "    state = env.reset()\n",
        "    done = False\n",
        "    total_reward = 0\n",
        "\n",
        "    while not done:\n",
        "        state = np.reshape(state, [1, p_inputSpace])\n",
        "        if np.random.rand() < epsilon:\n",
        "            action = np.random.choice(p_outputSpace)\n",
        "        else:\n",
        "            action_values = model(state, training=False)\n",
        "            action = np.argmax(action_values[0])\n",
        "\n",
        "        next_state, reward, done, _ = env.step(action)\n",
        "        total_reward += reward\n",
        "        next_state = np.reshape(next_state, [1, p_inputSpace])\n",
        "        q_update = reward\n",
        "\n",
        "        if not done:\n",
        "            new_Q = model(next_state, training=False)\n",
        "            q_update += gamma * np.amax(new_Q[0])\n",
        "        with tf.GradientTape() as tape: #update the weights as per the gradient and the error (you will use this in A-IV)\n",
        "            q_values = model(state, training=True)\n",
        "            target_q_values = q_values.numpy()\n",
        "            target_q_values[0][action] = q_update\n",
        "            loss = loss_function(target_q_values, q_values)\n",
        "\n",
        "\n",
        "        grads = tape.gradient(loss, model.trainable_weights)\n",
        "        optimizer.apply_gradients(zip(grads, model.trainable_weights))\n",
        "        state = next_state\n",
        "\n",
        "    episode_rewards.append(total_reward)\n",
        "    if epsilon > epsilon_min:\n",
        "        epsilon *= epsilon_decay\n",
        "\n",
        "    print(f\"Episode: {episode + 1}, Total Reward: {total_reward}\")\n",
        "\n",
        "\n",
        "for _ in range(100):\n",
        "    state = env.reset()\n",
        "    done = False\n",
        "    total_reward = 0\n",
        "\n",
        "    while not done:\n",
        "        env.render()\n",
        "        state = np.reshape(state, [1, p_inputSpace])\n",
        "        action_values = model(state, training=False)\n",
        "        action = np.argmax(action_values[0])\n",
        "        next_state, reward, done, _ = env.step(action)\n",
        "        total_reward += reward\n",
        "        state = next_state\n",
        "\n",
        "    print(f\"Test Episode Reward: {total_reward}\")\n",
        "\n",
        "env.close()\n",
        "\n",
        "plt.plot(range(episodes), episode_rewards, 'r-', label=\"Total Reward per Episode\")\n",
        "plt.xlabel(\"Episode\")\n",
        "plt.ylabel(\"Total Reward\")\n",
        "plt.title(\"Training Performance of CartPole Agent\")\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "mgDDghVJ7XIs",
        "outputId": "d0418541-a603-4931-ccd3-8e5f5f55a17c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/gym/core.py:317: DeprecationWarning: \u001b[33mWARN: Initializing wrapper in old step API which returns one bool instead of two. It is recommended to set `new_step_api=True` to use new step API. This will be the default behaviour in future.\u001b[0m\n",
            "  deprecation(\n",
            "/usr/local/lib/python3.10/dist-packages/gym/wrappers/step_api_compatibility.py:39: DeprecationWarning: \u001b[33mWARN: Initializing environment in old step API which returns one bool instead of two. It is recommended to set `new_step_api=True` to use new step API. This will be the default behaviour in future.\u001b[0m\n",
            "  deprecation(\n",
            "/usr/local/lib/python3.10/dist-packages/gym/utils/passive_env_checker.py:241: DeprecationWarning: `np.bool8` is a deprecated alias for `np.bool_`.  (Deprecated NumPy 1.24)\n",
            "  if not isinstance(terminated, (bool, np.bool8)):\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Episode: 1, Total Reward: 11.0\n",
            "Episode: 2, Total Reward: 18.0\n",
            "Episode: 3, Total Reward: 25.0\n",
            "Episode: 4, Total Reward: 15.0\n",
            "Episode: 5, Total Reward: 11.0\n",
            "Episode: 6, Total Reward: 17.0\n",
            "Episode: 7, Total Reward: 58.0\n",
            "Episode: 8, Total Reward: 24.0\n",
            "Episode: 9, Total Reward: 14.0\n",
            "Episode: 10, Total Reward: 15.0\n",
            "Episode: 11, Total Reward: 15.0\n",
            "Episode: 12, Total Reward: 51.0\n",
            "Episode: 13, Total Reward: 10.0\n",
            "Episode: 14, Total Reward: 19.0\n",
            "Episode: 15, Total Reward: 56.0\n",
            "Episode: 16, Total Reward: 45.0\n",
            "Episode: 17, Total Reward: 21.0\n",
            "Episode: 18, Total Reward: 31.0\n",
            "Episode: 19, Total Reward: 27.0\n",
            "Episode: 20, Total Reward: 22.0\n",
            "Episode: 21, Total Reward: 22.0\n",
            "Episode: 22, Total Reward: 36.0\n",
            "Episode: 23, Total Reward: 16.0\n",
            "Episode: 24, Total Reward: 22.0\n",
            "Episode: 25, Total Reward: 16.0\n",
            "Episode: 26, Total Reward: 14.0\n",
            "Episode: 27, Total Reward: 11.0\n",
            "Episode: 28, Total Reward: 15.0\n",
            "Episode: 29, Total Reward: 15.0\n",
            "Episode: 30, Total Reward: 33.0\n",
            "Episode: 31, Total Reward: 53.0\n",
            "Episode: 32, Total Reward: 49.0\n",
            "Episode: 33, Total Reward: 19.0\n",
            "Episode: 34, Total Reward: 22.0\n",
            "Episode: 35, Total Reward: 12.0\n",
            "Episode: 36, Total Reward: 8.0\n",
            "Episode: 37, Total Reward: 20.0\n",
            "Episode: 38, Total Reward: 15.0\n",
            "Episode: 39, Total Reward: 36.0\n",
            "Episode: 40, Total Reward: 16.0\n",
            "Episode: 41, Total Reward: 15.0\n",
            "Episode: 42, Total Reward: 24.0\n",
            "Episode: 43, Total Reward: 11.0\n",
            "Episode: 44, Total Reward: 12.0\n",
            "Episode: 45, Total Reward: 16.0\n",
            "Episode: 46, Total Reward: 11.0\n",
            "Episode: 47, Total Reward: 13.0\n",
            "Episode: 48, Total Reward: 15.0\n",
            "Episode: 49, Total Reward: 58.0\n",
            "Episode: 50, Total Reward: 12.0\n",
            "Episode: 51, Total Reward: 15.0\n",
            "Episode: 52, Total Reward: 34.0\n",
            "Episode: 53, Total Reward: 27.0\n",
            "Episode: 54, Total Reward: 10.0\n",
            "Episode: 55, Total Reward: 10.0\n",
            "Episode: 56, Total Reward: 18.0\n",
            "Episode: 57, Total Reward: 19.0\n",
            "Episode: 58, Total Reward: 16.0\n",
            "Episode: 59, Total Reward: 30.0\n",
            "Episode: 60, Total Reward: 18.0\n",
            "Episode: 61, Total Reward: 21.0\n",
            "Episode: 62, Total Reward: 32.0\n",
            "Episode: 63, Total Reward: 13.0\n",
            "Episode: 64, Total Reward: 21.0\n",
            "Episode: 65, Total Reward: 17.0\n",
            "Episode: 66, Total Reward: 13.0\n",
            "Episode: 67, Total Reward: 11.0\n",
            "Episode: 68, Total Reward: 29.0\n",
            "Episode: 69, Total Reward: 17.0\n",
            "Episode: 70, Total Reward: 11.0\n",
            "Episode: 71, Total Reward: 34.0\n",
            "Episode: 72, Total Reward: 13.0\n",
            "Episode: 73, Total Reward: 11.0\n",
            "Episode: 74, Total Reward: 11.0\n",
            "Episode: 75, Total Reward: 19.0\n",
            "Episode: 76, Total Reward: 19.0\n",
            "Episode: 77, Total Reward: 13.0\n",
            "Episode: 78, Total Reward: 12.0\n",
            "Episode: 79, Total Reward: 10.0\n",
            "Episode: 80, Total Reward: 13.0\n",
            "Episode: 81, Total Reward: 22.0\n",
            "Episode: 82, Total Reward: 24.0\n",
            "Episode: 83, Total Reward: 10.0\n",
            "Episode: 84, Total Reward: 12.0\n",
            "Episode: 85, Total Reward: 17.0\n",
            "Episode: 86, Total Reward: 19.0\n",
            "Episode: 87, Total Reward: 17.0\n",
            "Episode: 88, Total Reward: 11.0\n",
            "Episode: 89, Total Reward: 26.0\n",
            "Episode: 90, Total Reward: 21.0\n",
            "Episode: 91, Total Reward: 13.0\n",
            "Episode: 92, Total Reward: 9.0\n",
            "Episode: 93, Total Reward: 27.0\n",
            "Episode: 94, Total Reward: 14.0\n",
            "Episode: 95, Total Reward: 10.0\n",
            "Episode: 96, Total Reward: 13.0\n",
            "Episode: 97, Total Reward: 13.0\n",
            "Episode: 98, Total Reward: 26.0\n",
            "Episode: 99, Total Reward: 18.0\n",
            "Episode: 100, Total Reward: 11.0\n",
            "Episode: 101, Total Reward: 20.0\n",
            "Episode: 102, Total Reward: 14.0\n",
            "Episode: 103, Total Reward: 11.0\n",
            "Episode: 104, Total Reward: 20.0\n",
            "Episode: 105, Total Reward: 9.0\n",
            "Episode: 106, Total Reward: 17.0\n",
            "Episode: 107, Total Reward: 11.0\n",
            "Episode: 108, Total Reward: 13.0\n",
            "Episode: 109, Total Reward: 15.0\n",
            "Episode: 110, Total Reward: 12.0\n",
            "Episode: 111, Total Reward: 32.0\n",
            "Episode: 112, Total Reward: 10.0\n",
            "Episode: 113, Total Reward: 11.0\n",
            "Episode: 114, Total Reward: 9.0\n",
            "Episode: 115, Total Reward: 16.0\n",
            "Episode: 116, Total Reward: 13.0\n",
            "Episode: 117, Total Reward: 15.0\n",
            "Episode: 118, Total Reward: 13.0\n",
            "Episode: 119, Total Reward: 24.0\n",
            "Episode: 120, Total Reward: 11.0\n",
            "Episode: 121, Total Reward: 32.0\n",
            "Episode: 122, Total Reward: 11.0\n",
            "Episode: 123, Total Reward: 21.0\n",
            "Episode: 124, Total Reward: 11.0\n",
            "Episode: 125, Total Reward: 10.0\n",
            "Episode: 126, Total Reward: 13.0\n",
            "Episode: 127, Total Reward: 22.0\n",
            "Episode: 128, Total Reward: 10.0\n",
            "Episode: 129, Total Reward: 12.0\n",
            "Episode: 130, Total Reward: 10.0\n",
            "Episode: 131, Total Reward: 12.0\n",
            "Episode: 132, Total Reward: 12.0\n",
            "Episode: 133, Total Reward: 11.0\n",
            "Episode: 134, Total Reward: 10.0\n",
            "Episode: 135, Total Reward: 15.0\n",
            "Episode: 136, Total Reward: 21.0\n",
            "Episode: 137, Total Reward: 10.0\n",
            "Episode: 138, Total Reward: 10.0\n",
            "Episode: 139, Total Reward: 15.0\n",
            "Episode: 140, Total Reward: 16.0\n",
            "Episode: 141, Total Reward: 12.0\n",
            "Episode: 142, Total Reward: 13.0\n",
            "Episode: 143, Total Reward: 13.0\n",
            "Episode: 144, Total Reward: 11.0\n",
            "Episode: 145, Total Reward: 9.0\n",
            "Episode: 146, Total Reward: 8.0\n",
            "Episode: 147, Total Reward: 15.0\n",
            "Episode: 148, Total Reward: 10.0\n",
            "Episode: 149, Total Reward: 10.0\n",
            "Episode: 150, Total Reward: 11.0\n",
            "Episode: 151, Total Reward: 13.0\n",
            "Episode: 152, Total Reward: 9.0\n",
            "Episode: 153, Total Reward: 8.0\n",
            "Episode: 154, Total Reward: 10.0\n",
            "Episode: 155, Total Reward: 12.0\n",
            "Episode: 156, Total Reward: 12.0\n",
            "Episode: 157, Total Reward: 22.0\n",
            "Episode: 158, Total Reward: 13.0\n",
            "Episode: 159, Total Reward: 13.0\n",
            "Episode: 160, Total Reward: 11.0\n",
            "Episode: 161, Total Reward: 10.0\n",
            "Episode: 162, Total Reward: 11.0\n",
            "Episode: 163, Total Reward: 15.0\n",
            "Episode: 164, Total Reward: 11.0\n",
            "Episode: 165, Total Reward: 15.0\n",
            "Episode: 166, Total Reward: 11.0\n",
            "Episode: 167, Total Reward: 11.0\n",
            "Episode: 168, Total Reward: 16.0\n",
            "Episode: 169, Total Reward: 10.0\n",
            "Episode: 170, Total Reward: 16.0\n",
            "Episode: 171, Total Reward: 19.0\n",
            "Episode: 172, Total Reward: 10.0\n",
            "Episode: 173, Total Reward: 10.0\n",
            "Episode: 174, Total Reward: 25.0\n",
            "Episode: 175, Total Reward: 11.0\n",
            "Episode: 176, Total Reward: 13.0\n",
            "Episode: 177, Total Reward: 10.0\n",
            "Episode: 178, Total Reward: 26.0\n",
            "Episode: 179, Total Reward: 15.0\n",
            "Episode: 180, Total Reward: 9.0\n",
            "Episode: 181, Total Reward: 9.0\n",
            "Episode: 182, Total Reward: 9.0\n",
            "Episode: 183, Total Reward: 15.0\n",
            "Episode: 184, Total Reward: 9.0\n",
            "Episode: 185, Total Reward: 10.0\n",
            "Episode: 186, Total Reward: 12.0\n",
            "Episode: 187, Total Reward: 12.0\n",
            "Episode: 188, Total Reward: 11.0\n",
            "Episode: 189, Total Reward: 10.0\n",
            "Episode: 190, Total Reward: 11.0\n",
            "Episode: 191, Total Reward: 12.0\n",
            "Episode: 192, Total Reward: 9.0\n",
            "Episode: 193, Total Reward: 17.0\n",
            "Episode: 194, Total Reward: 28.0\n",
            "Episode: 195, Total Reward: 10.0\n",
            "Episode: 196, Total Reward: 19.0\n",
            "Episode: 197, Total Reward: 16.0\n",
            "Episode: 198, Total Reward: 12.0\n",
            "Episode: 199, Total Reward: 10.0\n",
            "Episode: 200, Total Reward: 9.0\n",
            "Episode: 201, Total Reward: 12.0\n",
            "Episode: 202, Total Reward: 9.0\n",
            "Episode: 203, Total Reward: 9.0\n",
            "Episode: 204, Total Reward: 9.0\n",
            "Episode: 205, Total Reward: 10.0\n",
            "Episode: 206, Total Reward: 19.0\n",
            "Episode: 207, Total Reward: 10.0\n",
            "Episode: 208, Total Reward: 15.0\n",
            "Episode: 209, Total Reward: 17.0\n",
            "Episode: 210, Total Reward: 12.0\n",
            "Episode: 211, Total Reward: 11.0\n",
            "Episode: 212, Total Reward: 10.0\n",
            "Episode: 213, Total Reward: 17.0\n",
            "Episode: 214, Total Reward: 14.0\n",
            "Episode: 215, Total Reward: 25.0\n",
            "Episode: 216, Total Reward: 10.0\n",
            "Episode: 217, Total Reward: 10.0\n",
            "Episode: 218, Total Reward: 9.0\n",
            "Episode: 219, Total Reward: 12.0\n",
            "Episode: 220, Total Reward: 13.0\n",
            "Episode: 221, Total Reward: 9.0\n",
            "Episode: 222, Total Reward: 11.0\n",
            "Episode: 223, Total Reward: 9.0\n",
            "Episode: 224, Total Reward: 9.0\n",
            "Episode: 225, Total Reward: 10.0\n",
            "Episode: 226, Total Reward: 11.0\n",
            "Episode: 227, Total Reward: 16.0\n",
            "Episode: 228, Total Reward: 11.0\n",
            "Episode: 229, Total Reward: 15.0\n",
            "Episode: 230, Total Reward: 11.0\n",
            "Episode: 231, Total Reward: 11.0\n",
            "Episode: 232, Total Reward: 9.0\n",
            "Episode: 233, Total Reward: 23.0\n",
            "Episode: 234, Total Reward: 10.0\n",
            "Episode: 235, Total Reward: 11.0\n",
            "Episode: 236, Total Reward: 9.0\n",
            "Episode: 237, Total Reward: 11.0\n",
            "Episode: 238, Total Reward: 9.0\n",
            "Episode: 239, Total Reward: 13.0\n",
            "Episode: 240, Total Reward: 13.0\n",
            "Episode: 241, Total Reward: 13.0\n",
            "Episode: 242, Total Reward: 9.0\n",
            "Episode: 243, Total Reward: 10.0\n",
            "Episode: 244, Total Reward: 12.0\n",
            "Episode: 245, Total Reward: 10.0\n",
            "Episode: 246, Total Reward: 10.0\n",
            "Episode: 247, Total Reward: 10.0\n",
            "Episode: 248, Total Reward: 9.0\n",
            "Episode: 249, Total Reward: 10.0\n",
            "Episode: 250, Total Reward: 11.0\n",
            "Episode: 251, Total Reward: 10.0\n",
            "Episode: 252, Total Reward: 21.0\n",
            "Episode: 253, Total Reward: 12.0\n",
            "Episode: 254, Total Reward: 14.0\n",
            "Episode: 255, Total Reward: 10.0\n",
            "Episode: 256, Total Reward: 14.0\n",
            "Episode: 257, Total Reward: 13.0\n",
            "Episode: 258, Total Reward: 16.0\n",
            "Episode: 259, Total Reward: 8.0\n",
            "Episode: 260, Total Reward: 11.0\n",
            "Episode: 261, Total Reward: 13.0\n",
            "Episode: 262, Total Reward: 11.0\n",
            "Episode: 263, Total Reward: 11.0\n",
            "Episode: 264, Total Reward: 13.0\n",
            "Episode: 265, Total Reward: 9.0\n",
            "Episode: 266, Total Reward: 10.0\n",
            "Episode: 267, Total Reward: 18.0\n",
            "Episode: 268, Total Reward: 18.0\n",
            "Episode: 269, Total Reward: 10.0\n",
            "Episode: 270, Total Reward: 9.0\n",
            "Episode: 271, Total Reward: 20.0\n",
            "Episode: 272, Total Reward: 9.0\n",
            "Episode: 273, Total Reward: 9.0\n",
            "Episode: 274, Total Reward: 11.0\n",
            "Episode: 275, Total Reward: 17.0\n",
            "Episode: 276, Total Reward: 13.0\n",
            "Episode: 277, Total Reward: 11.0\n",
            "Episode: 278, Total Reward: 9.0\n",
            "Episode: 279, Total Reward: 10.0\n",
            "Episode: 280, Total Reward: 11.0\n",
            "Episode: 281, Total Reward: 9.0\n",
            "Episode: 282, Total Reward: 10.0\n",
            "Episode: 283, Total Reward: 9.0\n",
            "Episode: 284, Total Reward: 10.0\n",
            "Episode: 285, Total Reward: 10.0\n",
            "Episode: 286, Total Reward: 11.0\n",
            "Episode: 287, Total Reward: 13.0\n",
            "Episode: 288, Total Reward: 14.0\n",
            "Episode: 289, Total Reward: 9.0\n",
            "Episode: 290, Total Reward: 8.0\n",
            "Episode: 291, Total Reward: 9.0\n",
            "Episode: 292, Total Reward: 9.0\n",
            "Episode: 293, Total Reward: 9.0\n",
            "Episode: 294, Total Reward: 10.0\n",
            "Episode: 295, Total Reward: 10.0\n",
            "Episode: 296, Total Reward: 9.0\n",
            "Episode: 297, Total Reward: 8.0\n",
            "Episode: 298, Total Reward: 10.0\n",
            "Episode: 299, Total Reward: 12.0\n",
            "Episode: 300, Total Reward: 11.0\n",
            "Episode: 301, Total Reward: 9.0\n",
            "Episode: 302, Total Reward: 9.0\n",
            "Episode: 303, Total Reward: 8.0\n",
            "Episode: 304, Total Reward: 11.0\n",
            "Episode: 305, Total Reward: 11.0\n",
            "Episode: 306, Total Reward: 9.0\n",
            "Episode: 307, Total Reward: 9.0\n",
            "Episode: 308, Total Reward: 9.0\n",
            "Episode: 309, Total Reward: 9.0\n",
            "Episode: 310, Total Reward: 12.0\n",
            "Episode: 311, Total Reward: 8.0\n",
            "Episode: 312, Total Reward: 9.0\n",
            "Episode: 313, Total Reward: 13.0\n",
            "Episode: 314, Total Reward: 9.0\n",
            "Episode: 315, Total Reward: 9.0\n",
            "Episode: 316, Total Reward: 9.0\n",
            "Episode: 317, Total Reward: 11.0\n",
            "Episode: 318, Total Reward: 9.0\n",
            "Episode: 319, Total Reward: 9.0\n",
            "Episode: 320, Total Reward: 9.0\n",
            "Episode: 321, Total Reward: 10.0\n",
            "Episode: 322, Total Reward: 8.0\n",
            "Episode: 323, Total Reward: 12.0\n",
            "Episode: 324, Total Reward: 10.0\n",
            "Episode: 325, Total Reward: 11.0\n",
            "Episode: 326, Total Reward: 9.0\n",
            "Episode: 327, Total Reward: 8.0\n",
            "Episode: 328, Total Reward: 10.0\n",
            "Episode: 329, Total Reward: 10.0\n",
            "Episode: 330, Total Reward: 9.0\n",
            "Episode: 331, Total Reward: 11.0\n",
            "Episode: 332, Total Reward: 10.0\n",
            "Episode: 333, Total Reward: 9.0\n",
            "Episode: 334, Total Reward: 12.0\n",
            "Episode: 335, Total Reward: 11.0\n",
            "Episode: 336, Total Reward: 11.0\n",
            "Episode: 337, Total Reward: 15.0\n",
            "Episode: 338, Total Reward: 10.0\n",
            "Episode: 339, Total Reward: 10.0\n",
            "Episode: 340, Total Reward: 9.0\n",
            "Episode: 341, Total Reward: 10.0\n",
            "Episode: 342, Total Reward: 8.0\n",
            "Episode: 343, Total Reward: 12.0\n",
            "Episode: 344, Total Reward: 11.0\n",
            "Episode: 345, Total Reward: 11.0\n",
            "Episode: 346, Total Reward: 12.0\n",
            "Episode: 347, Total Reward: 11.0\n",
            "Episode: 348, Total Reward: 8.0\n",
            "Episode: 349, Total Reward: 9.0\n",
            "Episode: 350, Total Reward: 11.0\n",
            "Episode: 351, Total Reward: 8.0\n",
            "Episode: 352, Total Reward: 10.0\n",
            "Episode: 353, Total Reward: 9.0\n",
            "Episode: 354, Total Reward: 10.0\n",
            "Episode: 355, Total Reward: 11.0\n",
            "Episode: 356, Total Reward: 10.0\n",
            "Episode: 357, Total Reward: 8.0\n",
            "Episode: 358, Total Reward: 11.0\n",
            "Episode: 359, Total Reward: 10.0\n",
            "Episode: 360, Total Reward: 10.0\n",
            "Episode: 361, Total Reward: 10.0\n",
            "Episode: 362, Total Reward: 8.0\n",
            "Episode: 363, Total Reward: 10.0\n",
            "Episode: 364, Total Reward: 9.0\n",
            "Episode: 365, Total Reward: 12.0\n",
            "Episode: 366, Total Reward: 10.0\n",
            "Episode: 367, Total Reward: 10.0\n",
            "Episode: 368, Total Reward: 8.0\n",
            "Episode: 369, Total Reward: 9.0\n",
            "Episode: 370, Total Reward: 8.0\n",
            "Episode: 371, Total Reward: 8.0\n",
            "Episode: 372, Total Reward: 14.0\n",
            "Episode: 373, Total Reward: 9.0\n",
            "Episode: 374, Total Reward: 9.0\n",
            "Episode: 375, Total Reward: 11.0\n",
            "Episode: 376, Total Reward: 11.0\n",
            "Episode: 377, Total Reward: 8.0\n",
            "Episode: 378, Total Reward: 11.0\n",
            "Episode: 379, Total Reward: 11.0\n",
            "Episode: 380, Total Reward: 12.0\n",
            "Episode: 381, Total Reward: 10.0\n",
            "Episode: 382, Total Reward: 11.0\n",
            "Episode: 383, Total Reward: 11.0\n",
            "Episode: 384, Total Reward: 10.0\n",
            "Episode: 385, Total Reward: 10.0\n",
            "Episode: 386, Total Reward: 10.0\n",
            "Episode: 387, Total Reward: 13.0\n",
            "Episode: 388, Total Reward: 9.0\n",
            "Episode: 389, Total Reward: 14.0\n",
            "Episode: 390, Total Reward: 9.0\n",
            "Episode: 391, Total Reward: 8.0\n",
            "Episode: 392, Total Reward: 11.0\n",
            "Episode: 393, Total Reward: 15.0\n",
            "Episode: 394, Total Reward: 9.0\n",
            "Episode: 395, Total Reward: 11.0\n",
            "Episode: 396, Total Reward: 9.0\n",
            "Episode: 397, Total Reward: 9.0\n",
            "Episode: 398, Total Reward: 11.0\n",
            "Episode: 399, Total Reward: 11.0\n",
            "Episode: 400, Total Reward: 10.0\n",
            "Episode: 401, Total Reward: 9.0\n",
            "Episode: 402, Total Reward: 12.0\n",
            "Episode: 403, Total Reward: 10.0\n",
            "Episode: 404, Total Reward: 12.0\n",
            "Episode: 405, Total Reward: 10.0\n",
            "Episode: 406, Total Reward: 13.0\n",
            "Episode: 407, Total Reward: 12.0\n",
            "Episode: 408, Total Reward: 10.0\n",
            "Episode: 409, Total Reward: 9.0\n",
            "Episode: 410, Total Reward: 10.0\n",
            "Episode: 411, Total Reward: 10.0\n",
            "Episode: 412, Total Reward: 10.0\n",
            "Episode: 413, Total Reward: 11.0\n",
            "Episode: 414, Total Reward: 13.0\n",
            "Episode: 415, Total Reward: 10.0\n",
            "Episode: 416, Total Reward: 10.0\n",
            "Episode: 417, Total Reward: 10.0\n",
            "Episode: 418, Total Reward: 9.0\n",
            "Episode: 419, Total Reward: 10.0\n",
            "Episode: 420, Total Reward: 13.0\n",
            "Episode: 421, Total Reward: 9.0\n",
            "Episode: 422, Total Reward: 11.0\n",
            "Episode: 423, Total Reward: 11.0\n",
            "Episode: 424, Total Reward: 9.0\n",
            "Episode: 425, Total Reward: 11.0\n",
            "Episode: 426, Total Reward: 9.0\n",
            "Episode: 427, Total Reward: 10.0\n",
            "Episode: 428, Total Reward: 11.0\n",
            "Episode: 429, Total Reward: 9.0\n",
            "Episode: 430, Total Reward: 8.0\n",
            "Episode: 431, Total Reward: 10.0\n",
            "Episode: 432, Total Reward: 11.0\n",
            "Episode: 433, Total Reward: 9.0\n",
            "Episode: 434, Total Reward: 8.0\n",
            "Episode: 435, Total Reward: 14.0\n",
            "Episode: 436, Total Reward: 10.0\n",
            "Episode: 437, Total Reward: 10.0\n",
            "Episode: 438, Total Reward: 9.0\n",
            "Episode: 439, Total Reward: 9.0\n",
            "Episode: 440, Total Reward: 9.0\n",
            "Episode: 441, Total Reward: 11.0\n",
            "Episode: 442, Total Reward: 11.0\n",
            "Episode: 443, Total Reward: 10.0\n",
            "Episode: 444, Total Reward: 10.0\n",
            "Episode: 445, Total Reward: 10.0\n",
            "Episode: 446, Total Reward: 9.0\n",
            "Episode: 447, Total Reward: 10.0\n",
            "Episode: 448, Total Reward: 9.0\n",
            "Episode: 449, Total Reward: 9.0\n",
            "Episode: 450, Total Reward: 10.0\n",
            "Episode: 451, Total Reward: 10.0\n",
            "Episode: 452, Total Reward: 14.0\n",
            "Episode: 453, Total Reward: 8.0\n",
            "Episode: 454, Total Reward: 9.0\n",
            "Episode: 455, Total Reward: 9.0\n",
            "Episode: 456, Total Reward: 11.0\n",
            "Episode: 457, Total Reward: 9.0\n",
            "Episode: 458, Total Reward: 9.0\n",
            "Episode: 459, Total Reward: 10.0\n",
            "Episode: 460, Total Reward: 9.0\n",
            "Episode: 461, Total Reward: 10.0\n",
            "Episode: 462, Total Reward: 10.0\n",
            "Episode: 463, Total Reward: 9.0\n",
            "Episode: 464, Total Reward: 8.0\n",
            "Episode: 465, Total Reward: 8.0\n",
            "Episode: 466, Total Reward: 9.0\n",
            "Episode: 467, Total Reward: 10.0\n",
            "Episode: 468, Total Reward: 10.0\n",
            "Episode: 469, Total Reward: 10.0\n",
            "Episode: 470, Total Reward: 10.0\n",
            "Episode: 471, Total Reward: 10.0\n",
            "Episode: 472, Total Reward: 10.0\n",
            "Episode: 473, Total Reward: 12.0\n",
            "Episode: 474, Total Reward: 11.0\n",
            "Episode: 475, Total Reward: 10.0\n",
            "Episode: 476, Total Reward: 10.0\n",
            "Episode: 477, Total Reward: 9.0\n",
            "Episode: 478, Total Reward: 10.0\n",
            "Episode: 479, Total Reward: 11.0\n",
            "Episode: 480, Total Reward: 10.0\n",
            "Episode: 481, Total Reward: 9.0\n",
            "Episode: 482, Total Reward: 9.0\n",
            "Episode: 483, Total Reward: 11.0\n",
            "Episode: 484, Total Reward: 11.0\n",
            "Episode: 485, Total Reward: 9.0\n",
            "Episode: 486, Total Reward: 8.0\n",
            "Episode: 487, Total Reward: 10.0\n",
            "Episode: 488, Total Reward: 12.0\n",
            "Episode: 489, Total Reward: 9.0\n",
            "Episode: 490, Total Reward: 9.0\n",
            "Episode: 491, Total Reward: 8.0\n",
            "Episode: 492, Total Reward: 9.0\n",
            "Episode: 493, Total Reward: 12.0\n",
            "Episode: 494, Total Reward: 10.0\n",
            "Episode: 495, Total Reward: 9.0\n",
            "Episode: 496, Total Reward: 10.0\n",
            "Episode: 497, Total Reward: 8.0\n",
            "Episode: 498, Total Reward: 9.0\n",
            "Episode: 499, Total Reward: 9.0\n",
            "Episode: 500, Total Reward: 9.0\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/gym/core.py:49: DeprecationWarning: \u001b[33mWARN: You are calling render method, but you didn't specified the argument render_mode at environment initialization. To maintain backward compatibility, the environment will render in human mode.\n",
            "If you want to render in human mode, initialize the environment in this way: gym.make('EnvName', render_mode='human') and don't call the render method.\n",
            "See here for more information: https://www.gymlibrary.ml/content/api/\u001b[0m\n",
            "  deprecation(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 11.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 11.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 8.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 11.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 10.0\n",
            "Test Episode Reward: 9.0\n",
            "Test Episode Reward: 9.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
